<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.management.mapper.ArticleMapper">
    <insert id="addArticle" parameterType="article">
        INSERT INTO article (title, content,createTime,uid,sid,quantity,status) VALUES ( #{title}, #{content},#{createTime},#{uid},#{sid},0,1)
    </insert>

    <select id="findAllSort" parameterType="map" resultType="sort">
        select * from sort
        <where>
            <if test="id != null and id !=''">
                and id = #{id}
            </if>
            <if test="sortName != null and sortName !=''">
                and sortName like concat("%",#{sortName},"%")
            </if>
        </where>
    </select>

    <insert id="addSort" parameterType="sort">
        INSERT INTO sort (sortName, remark,status) VALUES ( #{sortName}, #{remark},1)
    </insert>

    <update id="updateSort" parameterType="sort">
        UPDATE sort SET sortName=#{sortName},remark=#{remark} where id=#{id}
    </update>

    <update id="banSort" parameterType="sort">
        UPDATE sort SET status=#{status} where id=#{id}
    </update>

    <update id="banSortRows" parameterType="list">
        UPDATE sort SET status=0 where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="findAllArticle" parameterType="map" resultType="article">
        select a.id,a.title,a.content,a.createTime,a.uid,u.name,a.quantity,a.status,a.sid,s.sortName from article a,user u,sort s where a.uid=u.id and a.sid=s.id

            <if test="title != null and title !=''">
                and a.title like concat("%",#{title},"%")
            </if>
            <if test="sid != null and sid !=''">
                and a.sid = #{sid}
            </if>
        <if test="status != null and status !=''">
            and a.status = #{status}
        </if>
            order by createTime desc
    </select>

    <select id="getSort" resultType="sort">
        select * from sort
    </select>

    <update id="banArticle" parameterType="article">
        UPDATE article SET status=#{status} where id=#{id}
    </update>

    <update id="banArticleRows" parameterType="list">
        UPDATE article SET status=0 where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="getArticle" parameterType="int" resultType="article">
          select a.id,a.title,a.content,a.createTime,a.uid,u.name,a.quantity,a.status,a.sid,s.sortName from article a,user u,sort s where a.uid=u.id and a.sid=s.id and a.id=#{id}
    </select>

    <update id="addQuantity" parameterType="int">
        UPDATE article SET quantity=quantity+1 where id=#{id}
    </update>

    <select id="getComments" parameterType="int" resultType="comment">
        SELECT c.id,c.aid,c.pid,c.uid,u.name,u.img,c.content,c.time
        FROM comment c,user u WHERE c.aid=#{aid} AND c.uid=u.id
    </select>

    <insert id="addComments" parameterType="comment">
        INSERT INTO comment (content, uid,aid,status,time) VALUES ( #{content}, #{uid},#{aid},1,#{time})
    </insert>

    <insert id="addReply" parameterType="comment">
        INSERT INTO comment (content, uid,aid,status,pid,time) VALUES ( #{content}, #{uid},#{aid},1,#{pid},#{time})
    </insert>

    <select id="getReply" parameterType="int" resultType="comment">
     SELECT c.id,c.aid,c.pid,c.uid,u.name,u.img,c.content,c.time
        FROM comment c,user u WHERE c.uid=u.id and c.pid in (select id from comment where uid=#{id})
    </select>

    <select id="getArticleComment" parameterType="int" resultType="comment">
    SELECT c.id,c.aid,a.title,c.pid,c.uid,u.name,u.img,c.content,c.time
    FROM comment c,user u,article a WHERE c.uid=u.id and c.aid=a.id and c.aid in(select id from article where uid=#{id}) and c.pid is null
    </select>

</mapper>